{"version":3,"file":"static/js/779.c4809bcb.chunk.js","mappings":"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","sources":["components/API/Api.jsx","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from \"axios\";\nexport  const API_KEY_TMDB = '1c6932c63db86d0dbc05ca527fa0b6a9';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nexport const imageBaseUrl = 'https://image.tmdb.org/t/p/w200';\n\nexport const getMovieDetails = async (movieId) => {\ntry {\n    const response = await axios.get(`movie/${movieId}?language=en-US`, {\n        params: {\n        api_key: API_KEY_TMDB,\n        },\n    });\n    return response.data;\n} catch (error) {\n    throw new Error('Eroare la preluarea detaliilor filmului');\n}\n};\nexport const getCastDetails = async (movieId) => {\n    try {\n        const response = await axios.get(\n          `https://api.themoviedb.org/3/movie/${movieId}/credits`,\n          {\n            params: {\n              api_key: API_KEY_TMDB,\n            },\n          }\n        );\n        return response.data.cast; \n    } catch (error) {\n        throw new Error(\"Eroare la preluareea membrilor din casting\");\n        \n    }\n\n};\nexport const getReviews = async (movieId) => {\n    try {\n        const response = await axios.get(\n            `https://api.themoviedb.org/3/movie/${movieId}/reviews?language=en-US`,\n            {\n                params: {\n                    api_key: API_KEY_TMDB,\n                },\n            }\n        );\n     \n        return response.data;\n       \n    } catch (error) {\n        throw new Error('Eroare la preluareea review-urilor');\n    }\n};\n","import styled from \"styled-components\";\nexport const ListItemReview = styled.li`\n  color: brown;\n \n`;\n\n\n export const ContentReview = styled.p`\n  font-style: italic;\n`;\nexport const AuthorReview = styled.p`\n  text-transform: uppercase;\n  font-family: 'Cantarel';\n  color: brown;\n`;\nexport const ReviewsText = styled.h4`\n  text-align: center;\n  color: brown;\n`;\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { getReviews } from '../API/Api';\nimport { ListItemReview, ContentReview, AuthorReview, ReviewsText } from './Reviews.styled';\nimport { TiStarFullOutline } from 'react-icons/ti';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const reviewsMovie = await getReviews(movieId);\n        setReviews(reviewsMovie.results || []);\n        setLoading(false);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchReviews();\n  }, [movieId]);\n  if (loading) { return <p>Loading....</p> };\n  if (error) { return <p>{error}</p> };\n  return (\n    <div>\n      <ReviewsText>Reviews</ReviewsText>\n      <ol>\n        {reviews.length > 0 ? (\n          reviews.map(review => (\n            <ListItemReview key={review.id}>\n              {' '}\n              <span>\n                <TiStarFullOutline />\n              </span>{' '}\n              <span>\n                <TiStarFullOutline />\n              </span>{' '}\n              <span>\n                <TiStarFullOutline />\n              </span>\n              <AuthorReview>Author :{review.author}</AuthorReview>\n              <ContentReview>{review.content}</ContentReview>\n            </ListItemReview>\n          ))\n        ) : (\n          <p> No reviews available.</p>\n        )}\n      </ol>\n    </div>\n  );\n};\nexport default Reviews;\n"],"names":["API_KEY_TMDB","axios","imageBaseUrl","getMovieDetails","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","movieId","response","_context","prev","next","concat","params","api_key","sent","abrupt","data","t0","Error","stop","_x","apply","arguments","getCastDetails","_ref2","_callee2","_context2","cast","_x2","getReviews","_ref3","_callee3","_context3","_x3","ListItemReview","styled","_templateObject","_taggedTemplateLiteral","ContentReview","_templateObject2","AuthorReview","_templateObject3","ReviewsText","_templateObject4","useParams","_useState","useState","_useState2","_slicedToArray","error","setError","_useState3","_useState4","loading","setLoading","_useState5","_useState6","reviews","setReviews","useEffect","fetchReviews","reviewsMovie","results","message","finish","_jsx","children","_jsxs","length","map","review","TiStarFullOutline","author","content","id"],"sourceRoot":""}