{"version":3,"file":"static/js/415.ba65d8f6.chunk.js","mappings":"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","sources":["components/API/Api.jsx","pages/Home.jsx"],"sourcesContent":["import axios from \"axios\";\nexport  const API_KEY_TMDB = '1c6932c63db86d0dbc05ca527fa0b6a9';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nexport const imageBaseUrl = 'https://image.tmdb.org/t/p/w200';\n\nexport const getMovieDetails = async (movieId) => {\ntry {\n    const response = await axios.get(`movie/${movieId}?language=en-US`, {\n        params: {\n        api_key: API_KEY_TMDB,\n        },\n    });\n    return response.data;\n} catch (error) {\n    throw new Error('Eroare la preluarea detaliilor filmului');\n}\n};\nexport const getCastDetails = async (movieId) => {\n    try {\n        const response = await axios.get(\n          `https://api.themoviedb.org/3/movie/${movieId}/credits`,\n          {\n            params: {\n              api_key: API_KEY_TMDB,\n            },\n          }\n        );\n        return response.data.cast; \n    } catch (error) {\n        throw new Error(\"Eroare la preluareea membrilor din casting\");\n        \n    }\n\n};\nexport const getReviews = async (movieId) => {\n    try {\n        const response = await axios.get(\n            `https://api.themoviedb.org/3/movie/${movieId}/reviews?language=en-US`,\n            {\n                params: {\n                    api_key: API_KEY_TMDB,\n                },\n            }\n        );\n     \n        return response.data;\n       \n    } catch (error) {\n        throw new Error('Eroare la preluareea review-urilor');\n    }\n};\n","import React from 'react';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { API_KEY_TMDB } from 'components/API/Api';\nimport { Link , useLocation} from 'react-router-dom';\n\n\nfunction Home() {\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n  useEffect(() => {\n    const fetchTrendingMovies = async () => {\n      try {\n        const response = await axios.get('trending/movie/day', {\n          params: {\n            api_key: API_KEY_TMDB,\n          },\n        });\n        setMovies(response.data.results);\n      } catch (error) {\n        console.error('Error finding trending movies', error);\n        return [];\n      }\n    };\n    fetchTrendingMovies();\n  }, []);\n  return (\n    <div>\n      <h2>Trending Today</h2>\n      <ol>\n        {movies.map(movie => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title}({movie.release_date})\n            </Link>\n          </li>\n        ))}\n      </ol>\n    </div>\n  );\n}\nexport default Home;\n"],"names":["API_KEY_TMDB","axios","imageBaseUrl","getMovieDetails","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","movieId","response","_context","prev","next","concat","params","api_key","sent","abrupt","data","t0","Error","stop","_x","apply","arguments","getCastDetails","_ref2","_callee2","_context2","cast","_x2","getReviews","_ref3","_callee3","_context3","_x3","_useState","useState","_useState2","_slicedToArray","movies","setMovies","location","useLocation","useEffect","fetchTrendingMovies","results","console","error","_jsxs","children","_jsx","map","movie","Link","to","id","state","from","title","release_date"],"sourceRoot":""}