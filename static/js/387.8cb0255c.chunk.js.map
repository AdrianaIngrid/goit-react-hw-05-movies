{"version":3,"file":"static/js/387.8cb0255c.chunk.js","mappings":"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","sources":["components/API/Api.jsx","components/Cast/Cast.styled.js","components/Cast/Cast.jsx"],"sourcesContent":["import axios from \"axios\";\nexport  const API_KEY_TMDB = '1c6932c63db86d0dbc05ca527fa0b6a9';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nexport const imageBaseUrl = 'https://image.tmdb.org/t/p/w200';\n\nexport const getMovieDetails = async (movieId) => {\ntry {\n    const response = await axios.get(`movie/${movieId}?language=en-US`, {\n        params: {\n        api_key: API_KEY_TMDB,\n        },\n    });\n    return response.data;\n} catch (error) {\n    throw new Error('Eroare la preluarea detaliilor filmului');\n}\n};\nexport const getCastDetails = async (movieId) => {\n    try {\n        const response = await axios.get(\n          `https://api.themoviedb.org/3/movie/${movieId}/credits`,\n          {\n            params: {\n              api_key: API_KEY_TMDB,\n            },\n          }\n        );\n        return response.data.cast; \n    } catch (error) {\n        throw new Error(\"Eroare la preluareea membrilor din casting\");\n        \n    }\n\n};\nexport const getReviews = async (movieId) => {\n    try {\n        const response = await axios.get(\n            `https://api.themoviedb.org/3/movie/${movieId}/reviews?language=en-US`,\n            {\n                params: {\n                    api_key: API_KEY_TMDB,\n                },\n            }\n        );\n     \n        return response.data;\n       \n    } catch (error) {\n        throw new Error('Eroare la preluareea review-urilor');\n    }\n};\n","import styled from \"styled-components\";\nexport const CastImage = styled.img`\n  width: 100px;\n  height: 150px;\n  border-radius: 5px;\n  object-fit: cover;\n`;\nexport const CastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 9px;\n`;\nexport const CastItem = styled.li`\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  max-width: 200px;\n  gap: -5px;\n  background-color: white;\n  border-radius: 5px;\n  max-height: 300px;\n\n  box-shadow: inset 12px 10px 11px -10px rgba(1, 0, 0, 1);\n`;\nexport const MemberName = styled.p`\n  max-width: 100px;\n  font-size: 12px;\n  font-family: 'Cantarel';\n  color: black;\n  text-shadow: 1px 1px 2px yellow;\n`;\nexport const CharacterName = styled.p`\n  max-width: 200px;\n  font-size: 12px;\n  max-width: 100px;\n  font-family: 'Cantarel';\n  color: black;\n  text-shadow: 1px 1px 2px yellow;\n`;\nexport const CastTitle = styled.h2`\n  color: brown;\n  font-size: 20px;\n  text-align: center;\n`;","import React from 'react';\nimport { getCastDetails } from '../API/Api';\nimport { useState, useEffect } from 'react';\nimport { imageBaseUrl } from '../API/Api';\nimport { useParams } from 'react-router-dom';\nimport { CastTitle, CastImage, CastItem, CastList, MemberName, CharacterName } from './Cast.styled';\n\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  // const [movie, setMovie] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [cast, setCast] = useState([]);\n  useEffect(() => {\n    const fetchCastDetails = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        const movieCast = await getCastDetails(movieId);\n        setCast(movieCast);\n        setLoading(false);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchCastDetails();\n  }, [movieId]);\n  if (loading) { return <p>Loading...</p> };\n  if (error) { return <p>{error}</p> };\n  return (\n    <div>\n      <CastTitle>Cast</CastTitle>\n      <CastList>\n        {cast.map(member => (\n          <CastItem key={member.id}>\n            <CastImage\n              src={\n                member.profile_path\n                  ? `${imageBaseUrl}${member.profile_path}`\n                  : 'https://upload.wikimedia.org/wikipedia/commons/4/41/Noimage.svg'\n              }\n              alt={member.name}\n              width={50}\n            />\n            <MemberName>{member.name}</MemberName>\n            <CharacterName> Character :{member.character}</CharacterName>\n          </CastItem>\n        ))}\n      </CastList>\n    </div>\n  );\n};\nexport default Cast;\n"],"names":["API_KEY_TMDB","axios","imageBaseUrl","getMovieDetails","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","movieId","response","_context","prev","next","concat","params","api_key","sent","abrupt","data","t0","Error","stop","_x","apply","arguments","getCastDetails","_ref2","_callee2","_context2","cast","_x2","getReviews","_ref3","_callee3","_context3","_x3","CastImage","styled","_templateObject","_taggedTemplateLiteral","CastList","_templateObject2","CastItem","_templateObject3","MemberName","_templateObject4","CharacterName","_templateObject5","CastTitle","_templateObject6","useParams","_useState","useState","_useState2","_slicedToArray","error","setError","_useState3","_useState4","loading","setLoading","_useState5","_useState6","setCast","useEffect","fetchCastDetails","movieCast","message","finish","_jsx","children","_jsxs","map","member","src","profile_path","alt","name","width","character","id"],"sourceRoot":""}